package dev.itsmeow.whisperwoods.client.renderer.entity.model;

import java.util.function.Function;
import com.mojang.blaze3d.systems.RenderSystem;
import com.mojang.blaze3d.vertex.BufferBuilder;
import com.mojang.blaze3d.vertex.BufferUploader;
import com.mojang.blaze3d.vertex.DefaultVertexFormat;
import com.mojang.blaze3d.vertex.PoseStack;
import com.mojang.blaze3d.vertex.Tesselator;
import com.mojang.blaze3d.vertex.VertexConsumer;
import com.mojang.math.Matrix4f;
import dev.itsmeow.whisperwoods.WhisperwoodsMod;
import dev.itsmeow.whisperwoods.client.init.ClientLifecycleHandler;
import dev.itsmeow.whisperwoods.entity.EntityHirschgeist;
import net.minecraft.client.Minecraft;
import net.minecraft.client.model.EntityModel;
import net.minecraft.client.model.Model;
import net.minecraft.client.model.geom.ModelPart;
import net.minecraft.client.renderer.MultiBufferSource;
import net.minecraft.client.renderer.RenderType;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.util.Mth;

/**
 * hirschgeist_2 - CyberCat5555 Created using Tabula 8.0.0
 */
public class ModelHirschgeist extends EntityModel<EntityHirschgeist> {
    public TypeBasedModelRenderer spine01;
    public TypeBasedModelRenderer spine02;
    public TypeBasedModelRenderer ribs01;
    public TypeBasedModelRenderer lShoulderBlade01;
    public TypeBasedModelRenderer rShoulderBlade01;
    public TypeBasedModelRenderer neck01;
    public TypeBasedModelRenderer ribs04;
    public TypeBasedModelRenderer spine01b;
    public TypeBasedModelRenderer chestEcto;
    public TypeBasedModelRenderer spine03;
    public TypeBasedModelRenderer ribs02;
    public TypeBasedModelRenderer ribs03;
    public TypeBasedModelRenderer spine04;
    public TypeBasedModelRenderer torsoEcto;
    public TypeBasedModelRenderer lHip01;
    public TypeBasedModelRenderer rHip01;
    public TypeBasedModelRenderer tail01;
    public TypeBasedModelRenderer assEcto;
    public TypeBasedModelRenderer lHip02;
    public TypeBasedModelRenderer lHip03;
    public TypeBasedModelRenderer lLeg00;
    public TypeBasedModelRenderer lLeg01;
    public TypeBasedModelRenderer lLeg00Ecto;
    public TypeBasedModelRenderer lLeg02;
    public TypeBasedModelRenderer lLeg01Ecto;
    public TypeBasedModelRenderer lbHoof;
    public TypeBasedModelRenderer lLeg02Ecto;
    public TypeBasedModelRenderer lbHoofClaw01a;
    public TypeBasedModelRenderer rbHoofClaw02b;
    public TypeBasedModelRenderer lbHoofClaw01b;
    public TypeBasedModelRenderer rbHoofClaw02b_1;
    public TypeBasedModelRenderer lbLegFlame;
    public TypeBasedModelRenderer rHip02;
    public TypeBasedModelRenderer rHip03;
    public TypeBasedModelRenderer rLeg00;
    public TypeBasedModelRenderer rLeg01;
    public TypeBasedModelRenderer rLeg00Ecto;
    public TypeBasedModelRenderer rLeg02;
    public TypeBasedModelRenderer rLeg01Ecto;
    public TypeBasedModelRenderer rbHoof;
    public TypeBasedModelRenderer rLeg02Ecto;
    public TypeBasedModelRenderer rbHoofClaw01a;
    public TypeBasedModelRenderer rbHoofClaw02a;
    public TypeBasedModelRenderer rbHoofClaw01b;
    public TypeBasedModelRenderer rbHoofClaw02b_2;
    public TypeBasedModelRenderer rbLegFlame;
    public TypeBasedModelRenderer tail02;
    public TypeBasedModelRenderer tail03;
    public TypeBasedModelRenderer tail03Ecto;
    public TypeBasedModelRenderer tail04;
    public TypeBasedModelRenderer tail04Ecto;
    public TypeBasedModelRenderer lShoulderBlade02;
    public TypeBasedModelRenderer lArmShoulderEcto;
    public TypeBasedModelRenderer lArm00;
    public TypeBasedModelRenderer lArm01a;
    public TypeBasedModelRenderer lArm00Ecto;
    public TypeBasedModelRenderer lArm01b;
    public TypeBasedModelRenderer lArm02;
    public TypeBasedModelRenderer lArm01Ecto;
    public TypeBasedModelRenderer lfHoof;
    public TypeBasedModelRenderer lArm02Ecto;
    public TypeBasedModelRenderer lfHoofClaw01a;
    public TypeBasedModelRenderer lfHoofClaw02b;
    public TypeBasedModelRenderer lfHoofClaw01b;
    public TypeBasedModelRenderer lfHoofClaw02b_1;
    public TypeBasedModelRenderer lfLegFlame;
    public TypeBasedModelRenderer rShoulderBlade02;
    public TypeBasedModelRenderer rArmShoulderEcto;
    public TypeBasedModelRenderer rArm00;
    public TypeBasedModelRenderer rArm01a;
    public TypeBasedModelRenderer rArm00Ecto;
    public TypeBasedModelRenderer rArm01b;
    public TypeBasedModelRenderer rArm02;
    public TypeBasedModelRenderer rArm01Ecto;
    public TypeBasedModelRenderer rfHoof;
    public TypeBasedModelRenderer rArm02Ecto;
    public TypeBasedModelRenderer rbHoofClaw01a_1;
    public TypeBasedModelRenderer rbHoofClaw02b_3;
    public TypeBasedModelRenderer rbHoofClaw01b_1;
    public TypeBasedModelRenderer rbHoofClaw02b_4;
    public TypeBasedModelRenderer rfLegFlame;
    public TypeBasedModelRenderer neck02;
    public TypeBasedModelRenderer neck01Ecto;
    public TypeBasedModelRenderer neck03;
    public TypeBasedModelRenderer neck02Ecto;
    public TypeBasedModelRenderer head;
    public TypeBasedModelRenderer lUpperJaw;
    public TypeBasedModelRenderer lowerJaw;
    public TypeBasedModelRenderer snout;
    public TypeBasedModelRenderer rUpperJaw;
    public TypeBasedModelRenderer lAntler01;
    public TypeBasedModelRenderer rAntler01;
    public TypeBasedModelRenderer headEcto;
    public TypeBasedModelRenderer lAntler02;
    public TypeBasedModelRenderer lAntler03;
    public TypeBasedModelRenderer lAntler08;
    public TypeBasedModelRenderer lAntler09;
    public TypeBasedModelRenderer lAntler10;
    public TypeBasedModelRenderer lAntler04;
    public TypeBasedModelRenderer lAntler07;
    public TypeBasedModelRenderer lAntler05;
    public TypeBasedModelRenderer lAntler06;
    public TypeBasedModelRenderer lAntler05b;
    public TypeBasedModelRenderer lAntler07b;
    public TypeBasedModelRenderer lAntler08b;
    public TypeBasedModelRenderer lAntler09b;
    public TypeBasedModelRenderer lAntler09c;
    public TypeBasedModelRenderer lAntler010b;
    public TypeBasedModelRenderer rAntler02;
    public TypeBasedModelRenderer rAntler03;
    public TypeBasedModelRenderer rAntler08;
    public TypeBasedModelRenderer rAntler09;
    public TypeBasedModelRenderer rAntler10;
    public TypeBasedModelRenderer rAntler04;
    public TypeBasedModelRenderer rAntler07;
    public TypeBasedModelRenderer rAntler05;
    public TypeBasedModelRenderer rAntler06;
    public TypeBasedModelRenderer rAntler05b;
    public TypeBasedModelRenderer rAntler07b;
    public TypeBasedModelRenderer rAntler08b;
    public TypeBasedModelRenderer rAntler09b;
    public TypeBasedModelRenderer rAntler09c;
    public TypeBasedModelRenderer rAntler010b;
    public TypeBasedModelRenderer snoutEcto;
    public TypeBasedModelRenderer backFlameL02;
    public TypeBasedModelRenderer backFlameR02;
    public TypeBasedModelRenderer neckFlameL02;
    public TypeBasedModelRenderer neckFlameR02;
    public TypeBasedModelRenderer lowerNeckEcto;
    public TypeBasedModelRenderer neckFlameM;
    public TypeBasedModelRenderer spineEcto;
    public TypeBasedModelRenderer backFlameL01;
    public TypeBasedModelRenderer backFlameR01;
    private boolean isDaytime = false;

    public ModelHirschgeist() {
        this.texWidth = 128;
        this.texHeight = 128;
        this.rLeg01Ecto = new EctoModelRenderer(this, 60, 31);
        this.rLeg01Ecto.mirror = true;
        this.rLeg01Ecto.setPos(0.2F, 0.1F, 0.0F);
        this.rLeg01Ecto.addBox(-1.5F, -1.5F, -9.3F, 3.0F, 3.0F, 11.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rLeg01Ecto, -0.006981317112007048F, 0.0F, 0.0F);
        this.rbHoofClaw02b_4 = new BoneModelRenderer(this, 59, 25);
        this.rbHoofClaw02b_4.mirror = true;
        this.rbHoofClaw02b_4.setPos(0.0F, -0.2F, 0.6F);
        this.rbHoofClaw02b_4.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw02b_4, 0.3490658503988659F, 0.0F, 0.0F);
        this.ribs04 = new BoneModelRenderer(this, 77, 0);
        this.ribs04.setPos(0.0F, 0.2F, -3.6F);
        this.ribs04.addBox(-3.0F, 0.0F, -2.0F, 6.0F, 8.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(ribs04, -0.2617993877991494F, 0.0F, 0.0F);
        this.rbHoofClaw01a_1 = new BoneModelRenderer(this, 54, 26);
        this.rbHoofClaw01a_1.mirror = true;
        this.rbHoofClaw01a_1.setPos(-0.5F, -1.5F, -0.8F);
        this.rbHoofClaw01a_1.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw01a_1, 0.0F, 0.0F, -0.06981317007977318F);
        this.lAntler09 = new BoneModelRenderer(this, 70, 25);
        this.lAntler09.setPos(-0.2F, -2.8F, 0.0F);
        this.lAntler09.addBox(-0.5F, -3.0F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler09, -0.3490658503988659F, 0.0F, -1.1344640137963142F);
        this.lbHoofClaw01b = new BoneModelRenderer(this, 59, 25);
        this.lbHoofClaw01b.setPos(0.0F, -0.2F, 0.6F);
        this.lbHoofClaw01b.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lbHoofClaw01b, 0.3490658503988659F, 0.0F, 0.0F);
        this.rAntler10 = new BoneModelRenderer(this, 70, 25);
        this.rAntler10.mirror = true;
        this.rAntler10.setPos(0.2F, -0.1F, 0.0F);
        this.rAntler10.addBox(-0.5F, -2.0F, -0.5F, 0.8F, 2.0F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler10, 0.3490658503988659F, 0.0F, 1.1344640137963142F);
        this.rAntler07 = new BoneModelRenderer(this, 70, 25);
        this.rAntler07.mirror = true;
        this.rAntler07.setPos(-0.3F, -2.2F, 0.0F);
        this.rAntler07.addBox(-0.5F, -3.0F, -0.5F, 0.9F, 3.0F, 0.9F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler07, -0.2617993877991494F, 0.0F, -0.6981317007977318F);
        this.lHip02 = new BoneModelRenderer(this, 45, 16);
        this.lHip02.setPos(0.6F, -0.2F, 4.6F);
        this.lHip02.addBox(-0.5F, -1.5F, 0.0F, 1.0F, 3.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lHip02, 0.17453292519943295F, -0.4886921905584123F, -0.17453292519943295F);
        this.lowerNeckEcto = new EctoModelRenderer(this, 79, 62);
        this.lowerNeckEcto.setPos(0.0F, -2.5F, -2.3F);
        this.lowerNeckEcto.addBox(-4.0F, -1.0F, -0.6F, 8.0F, 12.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.rAntler06 = new FlameTipModelRenderer(this, 70, 25);
        this.rAntler06.mirror = true;
        this.rAntler06.setPos(-0.3F, -2.4F, 0.0F);
        this.rAntler06.addBox(-0.4F, -2.8F, -0.4F, 0.8F, 3.0F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler06, 0.0F, 0.0F, -0.8726646259971648F);
        this.rbLegFlame = new EctoModelRenderer(this, 46, 94);
        this.rbLegFlame.mirror = true;
        this.rbLegFlame.setPos(-0.2F, -0.5F, -6.6F);
        this.rbLegFlame.addBox(-4.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbLegFlame, -0.5235987755982988F, -0.7853981633974483F, -0.9599310885968813F);
        this.head = new BoneModelRenderer(this, 98, 0);
        this.head.setPos(0.0F, 0.3F, -1.1F);
        this.head.addBox(-3.0F, -5.1F, -5.1F, 6.0F, 6.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(head, 1.7976891295541593F, 0.0F, 0.0F);
        this.lArm01a = new BoneModelRenderer(this, 21, 51);
        this.lArm01a.setPos(0.8F, 0.6F, 8.2F);
        this.lArm01a.addBox(-0.5F, -0.6F, -0.5F, 1.0F, 11.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArm01a, 0.6108652381980153F, -0.05235987755982988F, 0.12217304763960307F);
        this.rAntler08b = new FlameTipModelRenderer(this, 70, 25);
        this.rAntler08b.mirror = true;
        this.rAntler08b.setPos(0.0F, -2.8F, 0.0F);
        this.rAntler08b.addBox(-0.4F, -2.0F, -0.4F, 0.7F, 2.0F, 0.7F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler08b, 0.0F, 0.0F, 0.5235987755982988F);
        this.tail01 = new BoneModelRenderer(this, 14, 0);
        this.tail01.setPos(0.0F, 0.0F, 7.6F);
        this.tail01.addBox(-1.0F, -1.0F, 0.0F, 2.0F, 2.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(tail01, -0.22689280275926282F, 0.0F, 0.0F);
        this.rLeg02Ecto = new EctoModelRenderer(this, 62, 32);
        this.rLeg02Ecto.mirror = true;
        this.rLeg02Ecto.setPos(0.2F, -0.4F, 0.0F);
        this.rLeg02Ecto.addBox(-1.0F, -0.5F, -10.0F, 2.0F, 2.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.neck03 = new BoneModelRenderer(this, 59, 2);
        this.neck03.setPos(0.0F, 0.2F, -5.2F);
        this.neck03.addBox(-1.5F, -1.0F, -4.0F, 3.0F, 3.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(neck03, -0.40142572795869574F, 0.0F, 0.0F);
        this.ribs02 = new BoneModelRenderer(this, 0, 34);
        this.ribs02.setPos(0.0F, 0.0F, 5.1F);
        this.ribs02.addBox(-3.5F, 0.0F, -2.0F, 7.0F, 9.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.lLeg00Ecto = new EctoModelRenderer(this, 60, 32);
        this.lLeg00Ecto.setPos(0.2F, 0.1F, 0.0F);
        this.lLeg00Ecto.addBox(-1.5F, -2.7F, -7.6F, 4.0F, 6.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.rbHoofClaw02a = new BoneModelRenderer(this, 54, 26);
        this.rbHoofClaw02a.mirror = true;
        this.rbHoofClaw02a.setPos(0.5F, -1.5F, -0.8F);
        this.rbHoofClaw02a.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw02a, 0.0F, 0.0F, 0.06981317007977318F);
        this.tail02 = new BoneModelRenderer(this, 14, 0);
        this.tail02.setPos(0.0F, 0.0F, 3.7F);
        this.tail02.addBox(-0.8F, -0.8F, 0.0F, 1.5F, 1.5F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(tail02, -0.22689280275926282F, 0.0F, 0.0F);
        this.chestEcto = new EctoModelRenderer(this, 0, 67);
        this.chestEcto.setPos(0.0F, 0.0F, 2.4F);
        this.chestEcto.addBox(-5.5F, -2.1F, -5.5F, 11.0F, 13.0F, 16.0F, 0.0F, 0.0F, 0.0F);
        this.backFlameL02 = new EctoModelRenderer(this, 68, 95);
        this.backFlameL02.setPos(0.0F, 0.2F, 2.5F);
        this.backFlameL02.addBox(-5.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(backFlameL02, 1.5707963267948966F, -0.5759586531581287F, 0.3490658503988659F);
        this.tail04Ecto = new EctoModelRenderer(this, 45, 40);
        this.tail04Ecto.setPos(0.0F, 0.0F, 0.0F);
        this.tail04Ecto.addBox(-1.0F, -1.0F, 0.0F, 2.0F, 2.0F, 4.5F, 0.0F, 0.0F, 0.0F);
        this.neckFlameL02 = new EctoModelRenderer(this, 46, 94);
        this.neckFlameL02.mirror = true;
        this.neckFlameL02.setPos(1.3F, 4.8F, 0.5F);
        this.neckFlameL02.addBox(-4.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(neckFlameL02, -0.7853981633974483F, -0.22689280275926282F, -0.4363323129985824F);
        this.rbHoofClaw01a = new BoneModelRenderer(this, 54, 26);
        this.rbHoofClaw01a.mirror = true;
        this.rbHoofClaw01a.setPos(-0.5F, -1.5F, -0.8F);
        this.rbHoofClaw01a.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw01a, 0.0F, 0.0F, -0.06981317007977318F);
        this.rbHoofClaw02b = new BoneModelRenderer(this, 54, 26);
        this.rbHoofClaw02b.mirror = true;
        this.rbHoofClaw02b.setPos(-0.5F, -1.5F, -0.8F);
        this.rbHoofClaw02b.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw02b, 0.0F, 0.0F, -0.06981317007977318F);
        this.lLeg02 = new BoneModelRenderer(this, 41, 25);
        this.lLeg02.setPos(0.0F, 0.6F, -8.4F);
        this.lLeg02.addBox(-0.5F, -0.5F, -10.0F, 1.0F, 1.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lLeg02, -0.6108652381980153F, -0.08726646259971647F, -0.19198621771937624F);
        this.rArm02 = new BoneModelRenderer(this, 19, 52);
        this.rArm02.mirror = true;
        this.rArm02.setPos(0.0F, 10.4F, -0.3F);
        this.rArm02.addBox(-0.5F, -0.6F, -0.5F, 1.0F, 10.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArm02, -0.03490658503988659F, 0.17453292519943295F, 0.0F);
        this.rbHoofClaw02b_1 = new BoneModelRenderer(this, 59, 25);
        this.rbHoofClaw02b_1.mirror = true;
        this.rbHoofClaw02b_1.setPos(0.0F, -0.2F, 0.6F);
        this.rbHoofClaw02b_1.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw02b_1, 0.3490658503988659F, 0.0F, 0.0F);
        this.backFlameR01 = new EctoModelRenderer(this, 63, 108);
        this.backFlameR01.mirror = true;
        this.backFlameR01.setPos(-1.0F, -2.1F, -6.0F);
        this.backFlameR01.addBox(-5.0F, 0.0F, 0.0F, 10.0F, 0.0F, 16.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(backFlameR01, 0.3839724354387525F, 0.15707963267948966F, -0.9599310885968813F);
        this.rbHoofClaw02b_2 = new BoneModelRenderer(this, 59, 25);
        this.rbHoofClaw02b_2.mirror = true;
        this.rbHoofClaw02b_2.setPos(0.0F, -0.2F, 0.6F);
        this.rbHoofClaw02b_2.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw02b_2, 0.3490658503988659F, 0.0F, 0.0F);
        this.rbHoofClaw01b_1 = new BoneModelRenderer(this, 59, 25);
        this.rbHoofClaw01b_1.mirror = true;
        this.rbHoofClaw01b_1.setPos(0.0F, -0.2F, 0.6F);
        this.rbHoofClaw01b_1.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw01b_1, 0.3490658503988659F, 0.0F, 0.0F);
        this.rAntler02 = new BoneModelRenderer(this, 70, 25);
        this.rAntler02.mirror = true;
        this.rAntler02.setPos(0.3F, -2.5F, 0.0F);
        this.rAntler02.addBox(-0.7F, -4.0F, -0.7F, 1.5F, 4.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler02, -0.08726646259971647F, 0.0F, -0.7853981633974483F);
        this.rLeg02 = new BoneModelRenderer(this, 41, 25);
        this.rLeg02.mirror = true;
        this.rLeg02.setPos(0.0F, 0.6F, -8.4F);
        this.rLeg02.addBox(-0.5F, -0.5F, -10.0F, 1.0F, 1.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rLeg02, -0.6108652381980153F, 0.08726646259971647F, 0.19198621771937624F);
        this.lAntler07b = new FlameTipModelRenderer(this, 70, 25);
        this.lAntler07b.setPos(0.0F, -2.8F, 0.0F);
        this.lAntler07b.addBox(-0.4F, -2.0F, -0.4F, 0.7F, 2.0F, 0.7F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler07b, 0.0F, 0.0F, -0.5235987755982988F);
        this.rAntler08 = new BoneModelRenderer(this, 70, 25);
        this.rAntler08.mirror = true;
        this.rAntler08.setPos(-0.4F, -1.2F, 0.0F);
        this.rAntler08.addBox(-0.5F, -3.0F, -0.5F, 0.9F, 3.0F, 0.9F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler08, 0.3839724354387525F, 0.0F, -0.6108652381980153F);
        this.neck02Ecto = new EctoModelRenderer(this, 106, 36);
        this.neck02Ecto.setPos(0.0F, 0.5F, -4.2F);
        this.neck02Ecto.addBox(-2.5F, -2.5F, -1.5F, 5.0F, 8.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.spine02 = new BoneModelRenderer(this, 22, 0);
        this.spine02.setPos(0.0F, 0.5F, 4.8F);
        this.spine02.addBox(-1.5F, -1.5F, 0.0F, 3.0F, 3.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(spine02, 0.10471975511965977F, 0.0F, 0.0F);
        this.rHip02 = new BoneModelRenderer(this, 45, 16);
        this.rHip02.setPos(-0.6F, -0.2F, 4.6F);
        this.rHip02.addBox(-0.5F, -1.5F, 0.0F, 1.0F, 3.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rHip02, 0.17453292519943295F, 0.4886921905584123F, 0.17453292519943295F);
        this.rbHoofClaw02b_3 = new BoneModelRenderer(this, 54, 26);
        this.rbHoofClaw02b_3.mirror = true;
        this.rbHoofClaw02b_3.setPos(0.5F, -1.5F, -0.8F);
        this.rbHoofClaw02b_3.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw02b_3, 0.0F, 0.0F, 0.06981317007977318F);
        this.lAntler08 = new BoneModelRenderer(this, 70, 25);
        this.lAntler08.setPos(0.4F, -1.2F, 0.0F);
        this.lAntler08.addBox(-0.5F, -3.0F, -0.5F, 0.9F, 3.0F, 0.9F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler08, 0.3839724354387525F, 0.0F, 0.6108652381980153F);
        this.assEcto = new EctoModelRenderer(this, 41, 53);
        this.assEcto.setPos(0.0F, 2.4F, 10.7F);
        this.assEcto.addBox(-4.0F, -3.8F, -5.5F, 8.0F, 11.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(assEcto, -0.13962634015954636F, 0.0F, 0.0F);
        this.headEcto = new EctoModelRenderer(this, 54, 75);
        this.headEcto.setPos(0.0F, -1.8F, -1.7F);
        this.headEcto.addBox(-4.0F, -4.0F, -4.0F, 8.0F, 8.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.lfLegFlame = new EctoModelRenderer(this, 46, 94);
        this.lfLegFlame.setPos(-0.7F, 0.4F, 5.9F);
        this.lfLegFlame.addBox(-4.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lfLegFlame, 2.1816615649929116F, -1.0471975511965976F, -0.22689280275926282F);
        this.lShoulderBlade01 = new BoneModelRenderer(this, 24, 46);
        this.lShoulderBlade01.setPos(3.1F, -0.5F, 1.1F);
        this.lShoulderBlade01.addBox(-1.1F, -0.8F, -4.0F, 2.0F, 1.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lShoulderBlade01, 0.9599310885968813F, 0.0F, -0.9250245035569946F);
        this.rAntler05 = new BoneModelRenderer(this, 70, 25);
        this.rAntler05.mirror = true;
        this.rAntler05.setPos(0.0F, -3.8F, 0.0F);
        this.rAntler05.addBox(-0.4F, -2.8F, -0.4F, 0.8F, 3.0F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler05, 0.0F, 0.0F, -0.5235987755982988F);
        this.spine01 = new BoneModelRenderer(this, 0, 1);
        this.spine01.setPos(0.0F, -3.9F, -14.8F);
        this.spine01.addBox(-1.5F, -1.0F, -2.0F, 3.0F, 3.0F, 7.0F, 0.0F, 0.0F, 0.0F);
        this.rAntler03 = new BoneModelRenderer(this, 70, 25);
        this.rAntler03.mirror = true;
        this.rAntler03.setPos(0.0F, -3.7F, 0.0F);
        this.rAntler03.addBox(-0.7F, -4.0F, -0.69F, 1.5F, 4.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler03, 0.0F, 0.0F, 0.5235987755982988F);
        this.lShoulderBlade02 = new BoneModelRenderer(this, 26, 34);
        this.lShoulderBlade02.setPos(0.0F, -0.2F, -1.9F);
        this.lShoulderBlade02.addBox(-0.5F, -1.5F, -2.1F, 1.0F, 4.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lShoulderBlade02, -0.3141592653589793F, 0.0F, 0.0F);
        this.rAntler07b = new FlameTipModelRenderer(this, 70, 25);
        this.rAntler07b.mirror = true;
        this.rAntler07b.setPos(0.0F, -2.8F, 0.0F);
        this.rAntler07b.addBox(-0.4F, -2.0F, -0.4F, 0.7F, 2.0F, 0.7F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler07b, 0.0F, 0.0F, 0.5235987755982988F);
        this.rAntler04 = new BoneModelRenderer(this, 70, 25);
        this.rAntler04.mirror = true;
        this.rAntler04.setPos(0.0F, -3.7F, 0.0F);
        this.rAntler04.addBox(-0.5F, -4.0F, -0.5F, 1.0F, 4.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler04, 0.0F, 0.0F, 0.5759586531581287F);
        this.neck01 = new BoneModelRenderer(this, 57, 0);
        this.neck01.setPos(0.0F, 0.0F, -2.1F);
        this.neck01.addBox(-1.5F, -1.0F, -6.0F, 3.0F, 3.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(neck01, -0.9250245035569946F, 0.0F, 0.0F);
        this.rAntler09c = new FlameTipModelRenderer(this, 70, 25);
        this.rAntler09c.mirror = true;
        this.rAntler09c.setPos(0.1F, -1.3F, 0.0F);
        this.rAntler09c.addBox(-0.2F, -1.5F, -0.3F, 0.6F, 1.5F, 0.6F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler09c, 0.0F, 0.0F, -0.5235987755982988F);
        this.lAntler05b = new FlameTipModelRenderer(this, 70, 25);
        this.lAntler05b.setPos(0.0F, -2.5F, 0.0F);
        this.lAntler05b.addBox(-0.4F, -2.0F, -0.4F, 0.6F, 2.0F, 0.6F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler05b, 0.0F, 0.0F, 0.5235987755982988F);
        this.spineEcto = new EctoModelRenderer(this, 80, 33);
        this.spineEcto.setPos(0.0F, 0.0F, 1.5F);
        this.spineEcto.addBox(-1.0F, -5.7F, -6.2F, 2.0F, 6.0F, 22.0F, 0.0F, 0.0F, 0.0F);
        this.lAntler02 = new BoneModelRenderer(this, 70, 25);
        this.lAntler02.setPos(-0.3F, -2.5F, 0.0F);
        this.lAntler02.addBox(-0.7F, -4.0F, -0.7F, 1.5F, 4.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler02, -0.08726646259971647F, 0.0F, 0.7853981633974483F);
        this.lAntler09b = new BoneModelRenderer(this, 70, 25);
        this.lAntler09b.setPos(0.0F, -2.8F, 0.0F);
        this.lAntler09b.addBox(-0.3F, -1.5F, -0.4F, 0.8F, 1.5F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler09b, 0.22689280275926282F, 0.0F, -0.17453292519943295F);
        this.rLeg00 = new BoneModelRenderer(this, 42, 26);
        this.rLeg00.mirror = true;
        this.rLeg00.setPos(0.1F, -0.7F, 1.8F);
        this.rLeg00.addBox(-1.5F, -1.0F, -7.7F, 2.0F, 2.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rLeg00, 1.5707963267948966F, 0.0F, 0.40142572795869574F);
        this.lAntler01 = new BoneModelRenderer(this, 70, 25);
        this.lAntler01.setPos(1.5F, -4.5F, -1.0F);
        this.lAntler01.addBox(-1.0F, -3.0F, -1.0F, 2.0F, 3.0F, 2.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler01, -0.08726646259971647F, 0.0F, 0.5235987755982988F);
        this.rShoulderBlade01 = new BoneModelRenderer(this, 24, 46);
        this.rShoulderBlade01.mirror = true;
        this.rShoulderBlade01.setPos(-3.1F, -0.5F, 1.1F);
        this.rShoulderBlade01.addBox(-1.1F, -0.8F, -4.0F, 2.0F, 1.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rShoulderBlade01, 0.9599310885968813F, 0.0F, 0.9250245035569946F);
        this.rfLegFlame = new EctoModelRenderer(this, 68, 94);
        this.rfLegFlame.setPos(0.7F, 0.4F, 5.9F);
        this.rfLegFlame.addBox(-4.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rfLegFlame, 2.1816615649929116F, 1.0471975511965976F, 0.22689280275926282F);
        this.rAntler010b = new FlameTipModelRenderer(this, 70, 25);
        this.rAntler010b.mirror = true;
        this.rAntler010b.setPos(0.0F, -1.7F, 0.0F);
        this.rAntler010b.addBox(-0.3F, -1.5F, -0.4F, 0.6F, 1.5F, 0.6F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler010b, 0.0F, 0.0F, 0.593411945678072F);
        this.lowerJaw = new BoneModelRenderer(this, 107, 14);
        this.lowerJaw.setPos(0.0F, 0.3F, -5.0F);
        this.lowerJaw.addBox(-1.5F, -1.4F, -5.6F, 3.0F, 2.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lowerJaw, -0.08726646259971647F, 0.0F, 0.0F);
        this.lArm02 = new BoneModelRenderer(this, 19, 52);
        this.lArm02.setPos(0.0F, 10.4F, -0.3F);
        this.lArm02.addBox(-0.5F, -0.6F, -0.5F, 1.0F, 10.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArm02, -0.03490658503988659F, -0.17453292519943295F, 0.0F);
        this.rAntler09b = new BoneModelRenderer(this, 70, 25);
        this.rAntler09b.mirror = true;
        this.rAntler09b.setPos(0.0F, -2.8F, 0.0F);
        this.rAntler09b.addBox(-0.3F, -1.5F, -0.4F, 0.8F, 1.5F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler09b, 0.22689280275926282F, 0.0F, 0.17453292519943295F);
        this.rAntler09 = new BoneModelRenderer(this, 70, 25);
        this.rAntler09.mirror = true;
        this.rAntler09.setPos(0.2F, -2.8F, 0.0F);
        this.rAntler09.addBox(-0.5F, -3.0F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler09, -0.3490658503988659F, 0.0F, 1.1344640137963142F);
        this.backFlameR02 = new EctoModelRenderer(this, 46, 94);
        this.backFlameR02.mirror = true;
        this.backFlameR02.setPos(0.0F, -0.2F, 2.5F);
        this.backFlameR02.addBox(-5.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(backFlameR02, 1.5707963267948966F, 0.5759586531581287F, -0.3490658503988659F);
        this.tail03 = new BoneModelRenderer(this, 38, 0);
        this.tail03.setPos(0.0F, 0.0F, 3.7F);
        this.tail03.addBox(-0.5F, -0.5F, 0.0F, 1.0F, 1.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(tail03, -0.22689280275926282F, 0.0F, 0.0F);
        this.rArm01Ecto = new EctoModelRenderer(this, 61, 31);
        this.rArm01Ecto.mirror = true;
        this.rArm01Ecto.setPos(-0.2F, -0.5F, 0.0F);
        this.rArm01Ecto.addBox(-1.0F, -2.2F, 0.0F, 2.0F, 3.0F, 11.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArm01Ecto, -1.6755160819145563F, 0.0F, 0.0F);
        this.neck01Ecto = new EctoModelRenderer(this, 104, 75);
        this.neck01Ecto.setPos(0.0F, 0.5F, -6.6F);
        this.neck01Ecto.addBox(-3.2F, -2.5F, -0.6F, 6.0F, 8.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.lAntler10 = new BoneModelRenderer(this, 70, 25);
        this.lAntler10.setPos(-0.2F, -0.1F, 0.0F);
        this.lAntler10.addBox(-0.5F, -2.0F, -0.5F, 0.8F, 2.0F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler10, 0.3490658503988659F, 0.0F, -1.1344640137963142F);
        this.lAntler07 = new BoneModelRenderer(this, 70, 25);
        this.lAntler07.setPos(0.3F, -2.2F, 0.0F);
        this.lAntler07.addBox(-0.5F, -3.0F, -0.5F, 0.9F, 3.0F, 0.9F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler07, -0.2617993877991494F, 0.0F, 0.6981317007977318F);
        this.neck02 = new BoneModelRenderer(this, 57, 0);
        this.neck02.setPos(0.01F, 0.2F, -5.2F);
        this.neck02.addBox(-1.5F, -1.0F, -6.1F, 3.0F, 3.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(neck02, -0.40142572795869574F, 0.0F, 0.0F);
        this.rArm01b = new BoneModelRenderer(this, 19, 50);
        this.rArm01b.mirror = true;
        this.rArm01b.setPos(0.0F, 6.8F, -0.3F);
        this.rArm01b.addBox(-0.5F, -8.4F, 0.0F, 1.0F, 12.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArm01b, -0.17453292519943295F, -0.03490658503988659F, 0.03490658503988659F);
        this.snout = new BoneModelRenderer(this, 66, 13);
        this.snout.setPos(0.0F, -3.94F, -5.0F);
        this.snout.addBox(-1.5F, -1.0F, -6.1F, 3.0F, 2.0F, 7.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(snout, 0.20943951023931953F, 0.0F, 0.0F);
        this.ribs03 = new BoneModelRenderer(this, 0, 49);
        this.ribs03.setPos(0.0F, 0.0F, 9.1F);
        this.ribs03.addBox(-2.5F, 0.0F, -1.5F, 5.0F, 7.0F, 3.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(ribs03, 0.05235987755982988F, 0.0F, 0.001745329278001762F);
        this.lbLegFlame = new EctoModelRenderer(this, 68, 94);
        this.lbLegFlame.setPos(-0.2F, -0.5F, -6.6F);
        this.lbLegFlame.addBox(-4.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lbLegFlame, -0.5235987755982988F, 0.7853981633974483F, 0.9599310885968813F);
        this.lbHoofClaw01a = new BoneModelRenderer(this, 54, 26);
        this.lbHoofClaw01a.setPos(0.5F, -1.5F, -0.8F);
        this.lbHoofClaw01a.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lbHoofClaw01a, 0.0F, 0.0F, 0.06981317007977318F);
        this.snoutEcto = new EctoModelRenderer(this, 31, 97);
        this.snoutEcto.setPos(0.0F, 0.0F, -3.8F);
        this.snoutEcto.addBox(-3.5F, -3.4F, -5.8F, 7.0F, 6.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.lArm01b = new BoneModelRenderer(this, 19, 50);
        this.lArm01b.setPos(0.0F, 6.8F, -0.4F);
        this.lArm01b.addBox(-0.5F, -8.4F, 0.0F, 1.0F, 12.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArm01b, -0.17453292519943295F, 0.03490658503988659F, -0.03490658503988659F);
        this.lAntler06 = new FlameTipModelRenderer(this, 70, 25);
        this.lAntler06.setPos(0.3F, -2.4F, 0.0F);
        this.lAntler06.addBox(-0.4F, -2.8F, -0.4F, 0.8F, 3.0F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler06, 0.0F, 0.0F, 0.8726646259971648F);
        this.lArm00 = new BoneModelRenderer(this, 11, 52);
        this.lArm00.setPos(-1.4F, 0.1F, -1.0F);
        this.lArm00.addBox(-0.3F, -1.5F, 0.0F, 2.0F, 2.0F, 9.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArm00, -1.1344640137963142F, 0.5585053606381855F, 0.6108652381980153F);
        this.spine03 = new BoneModelRenderer(this, 45, 6);
        this.spine03.setPos(0.0F, 0.0F, 7.5F);
        this.spine03.addBox(-1.0F, -1.5F, 0.0F, 2.0F, 3.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(spine03, -0.17453292519943295F, 0.0F, 0.0F);
        this.rArm00Ecto = new EctoModelRenderer(this, 61, 32);
        this.rArm00Ecto.mirror = true;
        this.rArm00Ecto.setPos(-0.8F, -0.5F, 0.0F);
        this.rArm00Ecto.addBox(-1.5F, -3.0F, 0.0F, 3.0F, 5.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.lLeg01Ecto = new EctoModelRenderer(this, 60, 31);
        this.lLeg01Ecto.setPos(0.2F, 0.1F, 0.0F);
        this.lLeg01Ecto.addBox(-1.5F, -1.5F, -9.3F, 3.0F, 3.0F, 11.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lLeg01Ecto, -0.006981317112007048F, 0.0F, 0.0F);
        this.lAntler04 = new BoneModelRenderer(this, 70, 25);
        this.lAntler04.setPos(0.0F, -3.7F, 0.0F);
        this.lAntler04.addBox(-0.5F, -4.0F, -0.5F, 1.0F, 4.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler04, 0.0F, 0.0F, -0.5759586531581287F);
        this.lLeg02Ecto = new EctoModelRenderer(this, 62, 32);
        this.lLeg02Ecto.setPos(0.2F, -0.4F, 0.0F);
        this.lLeg02Ecto.addBox(-1.0F, -0.5F, -10.0F, 2.0F, 2.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.backFlameL01 = new EctoModelRenderer(this, 41, 108);
        this.backFlameL01.setPos(1.0F, -2.1F, -6.0F);
        this.backFlameL01.addBox(-5.0F, 0.0F, 0.0F, 10.0F, 0.0F, 16.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(backFlameL01, 0.3839724354387525F, -0.15707963267948966F, 0.8726646259971648F);
        this.rAntler05b = new FlameTipModelRenderer(this, 70, 25);
        this.rAntler05b.mirror = true;
        this.rAntler05b.setPos(0.0F, -2.5F, 0.0F);
        this.rAntler05b.addBox(-0.2F, -2.0F, -0.4F, 0.6F, 2.0F, 0.6F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler05b, 0.0F, 0.0F, -0.5235987755982988F);
        this.lLeg01 = new BoneModelRenderer(this, 41, 25);
        this.lLeg01.setPos(0.5F, -0.3F, -6.9F);
        this.lLeg01.addBox(-1.0F, -1.0F, -9.0F, 2.0F, 2.0F, 9.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lLeg01, 0.9948376736367678F, 0.2617993877991494F, 0.12217304763960307F);
        this.lbHoof = new BoneModelRenderer(this, 41, 26);
        this.lbHoof.setPos(0.0F, 0.0F, -9.7F);
        this.lbHoof.addBox(-1.0F, -1.7F, -1.3F, 2.0F, 3.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lbHoof, 0.24434609527920614F, 0.0F, 0.10471975511965977F);
        this.spine04 = new BoneModelRenderer(this, 43, 4);
        this.spine04.setPos(0.0F, 0.0F, 5.8F);
        this.spine04.addBox(-0.99F, -1.5F, 0.0F, 2.0F, 3.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(spine04, 0.08726646259971647F, 0.0F, 0.0F);
        this.lLeg00 = new BoneModelRenderer(this, 42, 26);
        this.lLeg00.setPos(-0.1F, -0.7F, 1.8F);
        this.lLeg00.addBox(-0.5F, -1.0F, -7.7F, 2.0F, 2.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lLeg00, 1.5707963267948966F, 0.0F, -0.40142572795869574F);
        this.lfHoofClaw02b_1 = new BoneModelRenderer(this, 59, 25);
        this.lfHoofClaw02b_1.mirror = true;
        this.lfHoofClaw02b_1.setPos(0.0F, -0.2F, 0.6F);
        this.lfHoofClaw02b_1.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lfHoofClaw02b_1, 0.3490658503988659F, 0.0F, 0.0F);
        this.lfHoofClaw01b = new BoneModelRenderer(this, 59, 25);
        this.lfHoofClaw01b.setPos(0.0F, -0.2F, 0.6F);
        this.lfHoofClaw01b.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lfHoofClaw01b, 0.3490658503988659F, 0.0F, 0.0F);
        this.rfHoof = new BoneModelRenderer(this, 41, 26);
        this.rfHoof.mirror = true;
        this.rfHoof.setPos(0.0F, 9.5F, 0.0F);
        this.rfHoof.addBox(-1.0F, -1.7F, -1.3F, 2.0F, 3.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rfHoof, 1.605702911834783F, 0.0F, 0.0F);
        this.rbHoofClaw01b = new BoneModelRenderer(this, 59, 25);
        this.rbHoofClaw01b.mirror = true;
        this.rbHoofClaw01b.setPos(0.0F, -0.2F, 0.6F);
        this.rbHoofClaw01b.addBox(-0.49F, -1.8F, -0.5F, 1.0F, 3.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoofClaw01b, 0.3490658503988659F, 0.0F, 0.0F);
        this.torsoEcto = new EctoModelRenderer(this, 0, 99);
        this.torsoEcto.setPos(0.0F, 2.3F, 6.3F);
        this.torsoEcto.addBox(-5.0F, -4.5F, -5.5F, 10.0F, 9.0F, 11.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(torsoEcto, 0.08726646259971647F, 0.0F, 0.0F);
        this.rLeg01 = new BoneModelRenderer(this, 41, 25);
        this.rLeg01.mirror = true;
        this.rLeg01.setPos(-0.5F, -0.3F, -6.9F);
        this.rLeg01.addBox(-1.0F, -1.0F, -9.0F, 2.0F, 2.0F, 9.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rLeg01, 0.9948376736367678F, -0.2617993877991494F, -0.12217304763960307F);
        this.rbHoof = new BoneModelRenderer(this, 41, 26);
        this.rbHoof.mirror = true;
        this.rbHoof.setPos(0.0F, 0.0F, -9.7F);
        this.rbHoof.addBox(-1.0F, -1.7F, -1.3F, 2.0F, 3.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rbHoof, 0.24434609527920614F, 0.0F, -0.10471975511965977F);
        this.lAntler09c = new FlameTipModelRenderer(this, 70, 25);
        this.lAntler09c.setPos(-0.1F, -1.3F, 0.0F);
        this.lAntler09c.addBox(-0.2F, -1.5F, -0.3F, 0.6F, 1.5F, 0.6F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler09c, 0.0F, 0.0F, 0.5235987755982988F);
        this.rHip03 = new BoneModelRenderer(this, 45, 16);
        this.rHip03.mirror = true;
        this.rHip03.setPos(-0.2F, 0.0F, 3.6F);
        this.rHip03.addBox(-0.5F, -1.5F, 0.0F, 1.0F, 3.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rHip03, 0.0F, 0.8726646259971648F, 0.0F);
        this.lfHoofClaw01a = new BoneModelRenderer(this, 54, 26);
        this.lfHoofClaw01a.setPos(0.5F, -1.5F, -0.8F);
        this.lfHoofClaw01a.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lfHoofClaw01a, 0.0F, 0.0F, 0.06981317007977318F);
        this.lUpperJaw = new BoneModelRenderer(this, 86, 13);
        this.lUpperJaw.setPos(2.0F, -2.0F, -4.8F);
        this.lUpperJaw.addBox(-1.0F, -1.5F, -6.0F, 2.0F, 3.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lUpperJaw, 0.13962634015954636F, 0.22689280275926282F, 0.0F);
        this.lArmShoulderEcto = new EctoModelRenderer(this, 61, 32);
        this.lArmShoulderEcto.setPos(-0.9F, -0.8F, -5.2F);
        this.lArmShoulderEcto.addBox(-1.5F, -3.2F, 0.0F, 3.0F, 6.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArmShoulderEcto, -0.3490658503988659F, 0.2617993877991494F, 0.0F);
        this.lArm00Ecto = new EctoModelRenderer(this, 61, 32);
        this.lArm00Ecto.setPos(0.8F, -0.5F, 0.0F);
        this.lArm00Ecto.addBox(-1.5F, -3.0F, 0.0F, 3.0F, 5.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.lfHoofClaw02b = new BoneModelRenderer(this, 54, 26);
        this.lfHoofClaw02b.mirror = true;
        this.lfHoofClaw02b.setPos(-0.5F, -1.5F, -0.8F);
        this.lfHoofClaw02b.addBox(-0.5F, -1.8F, -0.5F, 1.0F, 2.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lfHoofClaw02b, 0.0F, 0.0F, -0.06981317007977318F);
        this.tail04 = new BoneModelRenderer(this, 38, 0);
        this.tail04.setPos(0.0F, 0.0F, 3.7F);
        this.tail04.addBox(-0.5F, -0.5F, 0.0F, 1.0F, 1.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(tail04, -0.22689280275926282F, 0.0F, 0.0F);
        this.rArm02Ecto = new EctoModelRenderer(this, 62, 32);
        this.rArm02Ecto.mirror = true;
        this.rArm02Ecto.setPos(-0.2F, -0.4F, 0.0F);
        this.rArm02Ecto.addBox(-1.0F, -1.0F, 0.0F, 2.0F, 2.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArm02Ecto, -1.5707963267948966F, 0.0F, 0.0F);
        this.rArmShoulderEcto = new EctoModelRenderer(this, 61, 32);
        this.rArmShoulderEcto.mirror = true;
        this.rArmShoulderEcto.setPos(0.9F, -0.8F, -5.2F);
        this.rArmShoulderEcto.addBox(-1.5F, -3.2F, 0.0F, 3.0F, 6.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArmShoulderEcto, -0.3490658503988659F, -0.2617993877991494F, 0.0F);
        this.lHip03 = new BoneModelRenderer(this, 45, 16);
        this.lHip03.setPos(0.2F, 0.0F, 3.6F);
        this.lHip03.addBox(-0.5F, -1.5F, 0.0F, 1.0F, 3.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lHip03, 0.0F, -0.8726646259971648F, 0.0F);
        this.lAntler03 = new BoneModelRenderer(this, 70, 25);
        this.lAntler03.setPos(0.0F, -3.7F, 0.0F);
        this.lAntler03.addBox(-0.7F, -4.0F, -0.69F, 1.5F, 4.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler03, 0.0F, 0.0F, -0.5235987755982988F);
        this.lfHoof = new BoneModelRenderer(this, 41, 26);
        this.lfHoof.setPos(0.0F, 9.5F, 0.0F);
        this.lfHoof.addBox(-1.0F, -1.7F, -1.3F, 2.0F, 3.0F, 1.5F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lfHoof, 1.605702911834783F, 0.0F, 0.0F);
        this.lArm02Ecto = new EctoModelRenderer(this, 62, 32);
        this.lArm02Ecto.setPos(0.2F, -0.4F, 0.0F);
        this.lArm02Ecto.addBox(-1.0F, -1.0F, 0.0F, 2.0F, 2.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArm02Ecto, -1.5707963267948966F, 0.0F, 0.0F);
        this.rShoulderBlade02 = new BoneModelRenderer(this, 26, 34);
        this.rShoulderBlade02.mirror = true;
        this.rShoulderBlade02.setPos(0.0F, -0.2F, -1.9F);
        this.rShoulderBlade02.addBox(-0.5F, -1.5F, -2.1F, 1.0F, 4.0F, 8.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rShoulderBlade02, -0.3141592653589793F, 0.0F, 0.0F);
        this.rUpperJaw = new BoneModelRenderer(this, 86, 13);
        this.rUpperJaw.mirror = true;
        this.rUpperJaw.setPos(-2.0F, -2.0F, -4.8F);
        this.rUpperJaw.addBox(-1.0F, -1.5F, -6.0F, 2.0F, 3.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rUpperJaw, 0.13962634015954636F, -0.22689280275926282F, 0.0F);
        this.rAntler01 = new BoneModelRenderer(this, 70, 25);
        this.rAntler01.mirror = true;
        this.rAntler01.setPos(-1.5F, -4.5F, -1.0F);
        this.rAntler01.addBox(-1.0F, -3.0F, -1.0F, 2.0F, 3.0F, 2.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rAntler01, -0.08726646259971647F, 0.0F, -0.5235987755982988F);
        this.neckFlameM = new EctoModelRenderer(this, 41, 108);
        this.neckFlameM.setPos(1.0F, 7.6F, 1.3F);
        this.neckFlameM.addBox(-5.0F, 0.0F, 0.0F, 10.0F, 0.0F, 16.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(neckFlameM, -1.0995574287564276F, 0.0F, 0.0F);
        this.rHip01 = new BoneModelRenderer(this, 30, 13);
        this.rHip01.setPos(-0.4F, 1.5F, 5.5F);
        this.rHip01.addBox(-1.1F, -1.7F, -1.0F, 1.0F, 2.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rHip01, -0.7853981633974483F, -0.45378560551852565F, 0.17453292519943295F);
        this.lHip01 = new BoneModelRenderer(this, 30, 13);
        this.lHip01.setPos(0.4F, 1.5F, 5.5F);
        this.lHip01.addBox(0.1F, -1.7F, -1.0F, 1.0F, 2.0F, 6.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lHip01, -0.7853981633974483F, 0.45378560551852565F, -0.17453292519943295F);
        this.lAntler08b = new FlameTipModelRenderer(this, 70, 25);
        this.lAntler08b.setPos(0.0F, -2.8F, 0.0F);
        this.lAntler08b.addBox(-0.4F, -2.0F, -0.4F, 0.7F, 2.0F, 0.7F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler08b, 0.0F, 0.0F, -0.5235987755982988F);
        this.lArm01Ecto = new EctoModelRenderer(this, 61, 31);
        this.lArm01Ecto.setPos(0.2F, -0.5F, 0.0F);
        this.lArm01Ecto.addBox(-1.0F, -2.2F, 0.0F, 2.0F, 3.0F, 11.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lArm01Ecto, -1.6755160819145563F, 0.0F, 0.0F);
        this.rArm00 = new BoneModelRenderer(this, 11, 52);
        this.rArm00.mirror = true;
        this.rArm00.setPos(1.4F, 0.1F, -1.0F);
        this.rArm00.addBox(-1.3F, -1.5F, 0.0F, 2.0F, 2.0F, 9.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArm00, -1.1344640137963142F, -0.5585053606381855F, -0.6108652381980153F);
        this.lAntler010b = new FlameTipModelRenderer(this, 70, 25);
        this.lAntler010b.setPos(0.0F, -1.7F, 0.0F);
        this.lAntler010b.addBox(-0.3F, -1.5F, -0.4F, 0.6F, 1.5F, 0.6F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler010b, 0.0F, 0.0F, -0.593411945678072F);
        this.spine01b = new BoneModelRenderer(this, 79, 6);
        this.spine01b.setPos(0.0F, 0.0F, 1.5F);
        this.spine01b.addBox(0.0F, -5.0F, -3.5F, 0.0F, 5.0F, 20.0F, 0.0F, 0.0F, 0.0F);
        this.rArm01a = new BoneModelRenderer(this, 21, 51);
        this.rArm01a.mirror = true;
        this.rArm01a.setPos(-0.8F, 0.6F, 8.2F);
        this.rArm01a.addBox(-0.5F, -0.6F, -0.5F, 1.0F, 11.0F, 1.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(rArm01a, 0.6108652381980153F, 0.05235987755982988F, -0.12217304763960307F);
        this.neckFlameR02 = new EctoModelRenderer(this, 68, 94);
        this.neckFlameR02.setPos(-1.3F, 4.8F, 0.5F);
        this.neckFlameR02.addBox(-4.0F, 0.0F, 0.0F, 8.0F, 0.0F, 13.0F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(neckFlameR02, -0.7853981633974483F, 0.22689280275926282F, 0.4363323129985824F);
        this.ribs01 = new BoneModelRenderer(this, 0, 12);
        this.ribs01.setPos(0.0F, 0.0F, 2.5F);
        this.ribs01.addBox(-4.5F, 0.0F, -5.5F, 9.0F, 10.0F, 11.0F, 0.0F, 0.0F, 0.0F);
        this.rLeg00Ecto = new EctoModelRenderer(this, 60, 32);
        this.rLeg00Ecto.mirror = true;
        this.rLeg00Ecto.setPos(-0.2F, 0.1F, 0.0F);
        this.rLeg00Ecto.addBox(-2.5F, -2.7F, -7.6F, 4.0F, 6.0F, 10.0F, 0.0F, 0.0F, 0.0F);
        this.lAntler05 = new BoneModelRenderer(this, 70, 25);
        this.lAntler05.setPos(0.0F, -3.8F, 0.0F);
        this.lAntler05.addBox(-0.4F, -2.8F, -0.4F, 0.8F, 3.0F, 0.8F, 0.0F, 0.0F, 0.0F);
        this.setRotateAngle(lAntler05, 0.0F, 0.0F, 0.5235987755982988F);
        this.tail03Ecto = new EctoModelRenderer(this, 45, 40);
        this.tail03Ecto.setPos(0.0F, 0.0F, 0.0F);
        this.tail03Ecto.addBox(-1.0F, -1.0F, 0.0F, 2.0F, 2.0F, 4.0F, 0.0F, 0.0F, 0.0F);
        this.rLeg01.addChild(this.rLeg01Ecto);
        this.rbHoofClaw02b_3.addChild(this.rbHoofClaw02b_4);
        this.spine01.addChild(this.ribs04);
        this.rfHoof.addChild(this.rbHoofClaw01a_1);
        this.lAntler02.addChild(this.lAntler09);
        this.lbHoofClaw01a.addChild(this.lbHoofClaw01b);
        this.rAntler02.addChild(this.rAntler10);
        this.rAntler03.addChild(this.rAntler07);
        this.lHip01.addChild(this.lHip02);
        this.ribs04.addChild(this.lowerNeckEcto);
        this.rAntler04.addChild(this.rAntler06);
        this.rLeg02Ecto.addChild(this.rbLegFlame);
        this.neck03.addChild(this.head);
        this.lArm00.addChild(this.lArm01a);
        this.rAntler08.addChild(this.rAntler08b);
        this.spine04.addChild(this.tail01);
        this.rLeg02.addChild(this.rLeg02Ecto);
        this.neck02.addChild(this.neck03);
        this.spine02.addChild(this.ribs02);
        this.lLeg00.addChild(this.lLeg00Ecto);
        this.rbHoof.addChild(this.rbHoofClaw02a);
        this.tail01.addChild(this.tail02);
        this.spine01.addChild(this.chestEcto);
        this.neck02Ecto.addChild(this.backFlameL02);
        this.tail04.addChild(this.tail04Ecto);
        this.neck01Ecto.addChild(this.neckFlameL02);
        this.rbHoof.addChild(this.rbHoofClaw01a);
        this.lbHoof.addChild(this.rbHoofClaw02b);
        this.lLeg01.addChild(this.lLeg02);
        this.rArm01a.addChild(this.rArm02);
        this.rbHoofClaw02b.addChild(this.rbHoofClaw02b_1);
        this.chestEcto.addChild(this.backFlameR01);
        this.rbHoofClaw02a.addChild(this.rbHoofClaw02b_2);
        this.rbHoofClaw01a_1.addChild(this.rbHoofClaw01b_1);
        this.rAntler01.addChild(this.rAntler02);
        this.rLeg01.addChild(this.rLeg02);
        this.lAntler07.addChild(this.lAntler07b);
        this.rAntler02.addChild(this.rAntler08);
        this.neck02.addChild(this.neck02Ecto);
        this.spine01.addChild(this.spine02);
        this.rHip01.addChild(this.rHip02);
        this.rfHoof.addChild(this.rbHoofClaw02b_3);
        this.lAntler02.addChild(this.lAntler08);
        this.spine04.addChild(this.assEcto);
        this.head.addChild(this.headEcto);
        this.lArm02Ecto.addChild(this.lfLegFlame);
        this.spine01.addChild(this.lShoulderBlade01);
        this.rAntler04.addChild(this.rAntler05);
        this.rAntler02.addChild(this.rAntler03);
        this.lShoulderBlade01.addChild(this.lShoulderBlade02);
        this.rAntler07.addChild(this.rAntler07b);
        this.rAntler03.addChild(this.rAntler04);
        this.spine01.addChild(this.neck01);
        this.rAntler09b.addChild(this.rAntler09c);
        this.lAntler05.addChild(this.lAntler05b);
        this.spine01b.addChild(this.spineEcto);
        this.lAntler01.addChild(this.lAntler02);
        this.lAntler09.addChild(this.lAntler09b);
        this.rHip02.addChild(this.rLeg00);
        this.head.addChild(this.lAntler01);
        this.spine01.addChild(this.rShoulderBlade01);
        this.rArm02Ecto.addChild(this.rfLegFlame);
        this.rAntler10.addChild(this.rAntler010b);
        this.head.addChild(this.lowerJaw);
        this.lArm01a.addChild(this.lArm02);
        this.rAntler09.addChild(this.rAntler09b);
        this.rAntler02.addChild(this.rAntler09);
        this.neck02Ecto.addChild(this.backFlameR02);
        this.tail02.addChild(this.tail03);
        this.rArm01a.addChild(this.rArm01Ecto);
        this.neck01.addChild(this.neck01Ecto);
        this.lAntler02.addChild(this.lAntler10);
        this.lAntler03.addChild(this.lAntler07);
        this.neck01.addChild(this.neck02);
        this.rArm01a.addChild(this.rArm01b);
        this.head.addChild(this.snout);
        this.spine02.addChild(this.ribs03);
        this.lLeg02Ecto.addChild(this.lbLegFlame);
        this.lbHoof.addChild(this.lbHoofClaw01a);
        this.headEcto.addChild(this.snoutEcto);
        this.lArm01a.addChild(this.lArm01b);
        this.lAntler04.addChild(this.lAntler06);
        this.lShoulderBlade02.addChild(this.lArm00);
        this.spine02.addChild(this.spine03);
        this.rArm00.addChild(this.rArm00Ecto);
        this.lLeg01.addChild(this.lLeg01Ecto);
        this.lAntler03.addChild(this.lAntler04);
        this.lLeg02.addChild(this.lLeg02Ecto);
        this.chestEcto.addChild(this.backFlameL01);
        this.rAntler05.addChild(this.rAntler05b);
        this.lLeg00.addChild(this.lLeg01);
        this.lLeg02.addChild(this.lbHoof);
        this.spine03.addChild(this.spine04);
        this.lHip02.addChild(this.lLeg00);
        this.lfHoofClaw02b.addChild(this.lfHoofClaw02b_1);
        this.lfHoofClaw01a.addChild(this.lfHoofClaw01b);
        this.rArm02.addChild(this.rfHoof);
        this.rbHoofClaw01a.addChild(this.rbHoofClaw01b);
        this.spine03.addChild(this.torsoEcto);
        this.rLeg00.addChild(this.rLeg01);
        this.rLeg02.addChild(this.rbHoof);
        this.lAntler09b.addChild(this.lAntler09c);
        this.rHip02.addChild(this.rHip03);
        this.lfHoof.addChild(this.lfHoofClaw01a);
        this.head.addChild(this.lUpperJaw);
        this.lShoulderBlade01.addChild(this.lArmShoulderEcto);
        this.lArm00.addChild(this.lArm00Ecto);
        this.lfHoof.addChild(this.lfHoofClaw02b);
        this.tail03.addChild(this.tail04);
        this.rArm02.addChild(this.rArm02Ecto);
        this.rShoulderBlade01.addChild(this.rArmShoulderEcto);
        this.lHip02.addChild(this.lHip03);
        this.lAntler02.addChild(this.lAntler03);
        this.lArm02.addChild(this.lfHoof);
        this.lArm02.addChild(this.lArm02Ecto);
        this.rShoulderBlade01.addChild(this.rShoulderBlade02);
        this.head.addChild(this.rUpperJaw);
        this.head.addChild(this.rAntler01);
        this.lowerNeckEcto.addChild(this.neckFlameM);
        this.spine04.addChild(this.rHip01);
        this.spine04.addChild(this.lHip01);
        this.lAntler08.addChild(this.lAntler08b);
        this.lArm01a.addChild(this.lArm01Ecto);
        this.rShoulderBlade02.addChild(this.rArm00);
        this.lAntler10.addChild(this.lAntler010b);
        this.spine01.addChild(this.spine01b);
        this.rArm00.addChild(this.rArm01a);
        this.neck01Ecto.addChild(this.neckFlameR02);
        this.spine01.addChild(this.ribs01);
        this.rLeg00.addChild(this.rLeg00Ecto);
        this.lAntler04.addChild(this.lAntler05);
        this.tail03.addChild(this.tail03Ecto);
    }

    @Override
    public void renderToBuffer(PoseStack matrixStackIn, VertexConsumer bufferIn, int packedLightIn, int packedOverlayIn, float red, float green, float blue, float alpha) {
        this.spine01.render(matrixStackIn, bufferIn, packedLightIn, packedOverlayIn, red, green, blue, alpha);
    }

    public void renderSpecial(ResourceLocation texture, PoseStack stack, MultiBufferSource typeBuffer, VertexConsumer bufferIn, int packedLightIn, int packedOverlayIn, float red, float green, float blue, float alpha) {
        this.spine01.renderSpecial(false, texture, stack, typeBuffer, bufferIn, packedLightIn, packedOverlayIn, red, green, blue, alpha);
        if(!isDaytime)
            this.spine01.renderSpecial(true, texture, stack, typeBuffer, bufferIn, packedLightIn, packedOverlayIn, red, green, blue, alpha);
    }

    @Override
    public void setupAnim(EntityHirschgeist entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
        this.isDaytime = entityIn.isDaytimeClient();
        float factor = 0.8F;
        this.lArm00.xRot = Mth.cos(limbSwing * 0.6662F) * factor * limbSwingAmount - 1.1344640137963142F;
        this.rArm00.xRot = Mth.cos(limbSwing * 0.6662F + (float) Math.PI) * factor * limbSwingAmount - 1.1344640137963142F;
        this.rLeg00.xRot = Mth.cos(limbSwing * 0.6662F) * factor * limbSwingAmount + 1.5707963267948966F;
        this.lLeg00.xRot = Mth.cos(limbSwing * 0.6662F + (float) Math.PI) * factor * limbSwingAmount + 1.5707963267948966F;
        if(entityIn.getTargetDistance() >= 0 && entityIn.getTargetDistance() < 10D) {
            this.neck01.xRot = Mth.cos(entityIn.getAttackAnim(Minecraft.getInstance().getFrameTime()) * ((float) Math.PI / 2F)) - 0.9250245035569946F;
        } else {
            this.neck01.xRot = -0.9250245035569946F;
        }
    }

    public static class TypeBasedModelRenderer extends ModelPart {

        protected Function<ResourceLocation, RenderType> type;
        protected Model parent;

        public TypeBasedModelRenderer(Model model, int texOffX, int texOffY, Function<ResourceLocation, RenderType> type) {
            super(model, texOffX, texOffY);
            this.type = type;
            this.parent = model;
        }

        public void renderSpecial(boolean ectoPass, ResourceLocation texture, PoseStack stack, MultiBufferSource typeBuffer, VertexConsumer bufferIn, int packedLightIn, int packedOverlayIn, float red, float green, float blue, float alpha) {
            if(this.visible) {
                if(!this.cubes.isEmpty() || !this.children.isEmpty()) {
                    stack.pushPose();
                    this.translateAndRotate(stack);
                    VertexConsumer vertexBuilder = typeBuffer.getBuffer(type.apply(texture));
                    if((this instanceof EctoModelRenderer && ectoPass) || (this instanceof BoneModelRenderer && !ectoPass)) {
                        this.compile(stack.last(), vertexBuilder, packedLightIn, packedOverlayIn, red, green, blue, alpha);
                    }

                    for(ModelPart modelrenderer : this.children) {
                        if(modelrenderer instanceof TypeBasedModelRenderer) {
                            ((TypeBasedModelRenderer) modelrenderer).renderSpecial(ectoPass, texture, stack, typeBuffer, bufferIn, packedLightIn, packedOverlayIn, red, green, blue, alpha);
                        }
                    }

                    stack.popPose();
                }
            }
        }

    }

    public static class BoneModelRenderer extends TypeBasedModelRenderer {

        public BoneModelRenderer(Model model, int texOffX, int texOffY) {
            super(model, texOffX, texOffY, model::renderType);
        }

    }

    public static class FlameTipModelRenderer extends BoneModelRenderer {

        public FlameTipModelRenderer(Model model, int texOffX, int texOffY) {
            super(model, texOffX, texOffY);
        }

        @Override
        public void render(PoseStack stack, VertexConsumer bufferIn, int packedLightIn, int packedOverlayIn, float red, float green, float blue, float alpha) {
            super.render(stack, bufferIn, packedLightIn, packedOverlayIn, red, green, blue, alpha);
            if(this.visible) {
                if(!this.cubes.isEmpty() || !this.children.isEmpty()) {
                    stack.pushPose();
                    this.translateAndRotate(stack);
                    Cube box = this.cubes.get(0);
                    stack.translate((box.minX + box.maxX) / 16F, (box.minY + box.maxY) / 16F, (box.minZ + box.maxZ) / 16F);
                    FlameRender.render(stack, 1F);
                    stack.popPose();
                }
            }
        }

        @Override
        public void renderSpecial(boolean ectoPass, ResourceLocation texture, PoseStack stack, MultiBufferSource typeBuffer, VertexConsumer bufferIn, int packedLightIn, int packedOverlayIn, float red, float green, float blue, float alpha) {
            super.renderSpecial(ectoPass, texture, stack, typeBuffer, bufferIn, packedLightIn, packedOverlayIn, red, green, blue, alpha);
            if(this.visible) {
                if(!this.cubes.isEmpty() || !this.children.isEmpty()) {
                    stack.pushPose();
                    this.translateAndRotate(stack);
                    Cube box = this.cubes.get(0);
                    stack.translate((box.minX + box.maxX) / 16F, (box.minY + box.maxY) / 16F, (box.minZ + box.maxZ) / 16F);
                    FlameRender.render(stack, 2F);
                    stack.popPose();
                }
            }
        }

    }

    public static class FlameRender {

        private static final ResourceLocation TEXTURE = new ResourceLocation(WhisperwoodsMod.MODID, "textures/particle/flame.png");

        @SuppressWarnings({ "resource", "deprecation" })
        public static void render(PoseStack stack, float scale) {
            RenderSystem.enableAlphaTest();
            RenderSystem.disableCull();
            RenderSystem.enableDepthTest();
            Minecraft.getInstance().getEntityRenderDispatcher().textureManager.bind(TEXTURE);
            Tesselator tessellator = Tesselator.getInstance();
            BufferBuilder bufferbuilder = tessellator.getBuilder();
            Matrix4f d = stack.last().pose();
            float ticks = ((float) Minecraft.getInstance().player.tickCount % 30) / 30F;
            Matrix4f matrix = Matrix4f.createTranslateMatrix(d.m03 + ((float) Math.random() - 0.5F) / 100F, d.m13 + ((float) Math.random() - 0.5F) / 100F, d.m23 + ((float) Math.random() - 0.5F) / 100F);
            float extraScale = (1F - ticks) + (float) Math.random() / 10F;
            matrix.multiply(Matrix4f.createScaleMatrix(0.1F * scale, 0.1F * scale, 0.1F * scale));
            bufferbuilder.begin(7, DefaultVertexFormat.POSITION_TEX);
            bufferbuilder.vertex(matrix, -1F, -1F, 0F).uv(1, 1).endVertex();
            bufferbuilder.vertex(matrix, -1F, 1F, 0F).uv(1, 0).endVertex();
            bufferbuilder.vertex(matrix, 1F, 1F, 0F).uv(0, 0).endVertex();
            bufferbuilder.vertex(matrix, 1F, -1F, 0F).uv(0, 1).endVertex();
            bufferbuilder.end();
            BufferUploader.end(bufferbuilder);
            matrix = Matrix4f.createTranslateMatrix(d.m03, d.m13, d.m23 + 0.01F);
            matrix.multiply(Matrix4f.createScaleMatrix(0.1F * scale, 0.1F * scale, 0.1F * scale));
            matrix.multiply(Matrix4f.createScaleMatrix(extraScale, extraScale, extraScale));
            bufferbuilder.begin(7, DefaultVertexFormat.POSITION_TEX);
            bufferbuilder.vertex(matrix, -1F, -1F, 0F).uv(1, 1).endVertex();
            bufferbuilder.vertex(matrix, -1F, 1F, 0F).uv(1, 0).endVertex();
            bufferbuilder.vertex(matrix, 1F, 1F, 0F).uv(0, 0).endVertex();
            bufferbuilder.vertex(matrix, 1F, -1F, 0F).uv(0, 1).endVertex();
            bufferbuilder.end();
            BufferUploader.end(bufferbuilder);
            RenderSystem.disableDepthTest();
            RenderSystem.enableCull();
            RenderSystem.disableAlphaTest();
        }

    }

    public static class EctoModelRenderer extends TypeBasedModelRenderer {

        public EctoModelRenderer(Model model, int texOffX, int texOffY) {
            super(model, texOffX, texOffY, ClientLifecycleHandler.RenderTypeAddition::getEyesEntityCutoutNoCullDepthMaskOff);
        }

    }

    public void setRotateAngle(ModelPart modelRenderer, float x, float y, float z) {
        modelRenderer.xRot = x;
        modelRenderer.yRot = y;
        modelRenderer.zRot = z;
    }

}
